version: '3.6'
services:
  keylime-verifier:
    build:
      context: ./docker/fedora/
      dockerfile: keylime_py.Dockerfile
    image: keylime_py
    hostname: 'keylime-verifier'
    user: root
    volumes:
      - secure-volume:/var/lib/keylime
      - ./config/verifier.conf:/etc/keylime/verifier.conf
    ports:
        - "8892:8892"
    command: [
      "sh", "-c", 
      "mkdir -p /etc/keylime && mkdir -p /usr/share/keylime/templates && mkdir -p /var/lib/keylime/cv_ca && touch /etc/keylime/logging.conf && /usr/local/bin/keylime_verifier"
    ]
  keylime-registrar:
    build:
      context: ./docker/fedora/
      dockerfile: keylime_py.Dockerfile
    image: keylime_py
    hostname: 'keylime-verifier' # this is a bit of poor workaround, will fix in python code
    user: root
    volumes:
      - secure-volume:/var/lib/keylime
      - ./config/registrar.conf:/etc/keylime/registrar.conf    
    ports:
        - "8891:8891"
        - "8890:8890"
    command: <
        "/root/wait.sh", "/var/lib/keylime/cv_ca/client-cert.crt", "keylime_registrar"
        bash -c "
        sed -i 's/p_sz, m_ovfl = p_sz_m_ovfl.split(",")/p_sz, m_ovfl = "4096", "64KiB"/' shubh-keylime-repo/keylime/db/keylime_db.py && 
        sed -i 's/^registrar_ip./registrar_ip = keylime-registrar/' /etc/keylime/registrar.conff &&
        sed -i 's/^ip = ./ip = 0.0.0.0/' /etc/keylime/registrar.conf &&
        exec /usr/local/bin/keylime_registrar
        "
  keylime_agent:
    build:
      context: ./docker/fedora/
      dockerfile: keylime_rust.Dockerfile
    image: keylime_rust
    hostname: 'keylime-agent'
    user: root
    privileged: true # Add privileged mode for secure mount operations
    volumes:
      - ./target/debug/:/rust-keylime
      - secure-volume:/var/lib/keylime
    network_mode: host
    environment:
      - TCTI=tabrmd:bus_type=system
      - RUST_KEYLIME_SKIP_SECURE_MOUNT=1 # Skip secure mount
      - RUST_BACKTRACE=1 # Add for better error diagnostics
    command:
      - /bin/bash
      - -c
      - |
        mkdir -p /tmp/tpmdir
        mkdir -p /var/lib/keylime
        # Create keylime user and group
        useradd -r keylime || echo "User may already exist"
        # Set up dbus
        rm -rf /var/run/dbus
        mkdir /var/run/dbus
        dbus-daemon --system
        ls /etc/dbus-1/system.d/
        # Set up TPM emulator
        swtpm_setup --tpm2 \
            --tpmstate /tmp/tpmdir \
            --createek --decryption --create-ek-cert \
            --create-platform-cert \
            --display
        swtpm socket --tpm2 \
            --tpmstate dir=/tmp/tpmdir \
            --flags startup-clear \
            --ctrl type=tcp,port=2322 \
            --server type=tcp,port=2321 \
            --daemon
        sleep 2 # Add a delay to ensure TPM is ready
        tpm2-abrmd \
            --logger=stdout \
            --tcti=swtpm: \
            --allow-root \
            --flush-all &
        sleep 2 # Add a delay to ensure ABRMD is ready
        # Run with debug logging
        # RUST_LOG=keylime_agent=debug,keylime=debug /usr/bin/keylime_agent
volumes:
  secure-volume:

